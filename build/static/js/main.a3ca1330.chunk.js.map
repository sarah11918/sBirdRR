{"version":3,"sources":["Container.js","SearchForm.js","BirdData.js","ErrorMessage.js","Home.js","RecentBirdList.js","Recent.js","NotableBirdList.js","Notable.js","BaywalkBirdList.js","Baywalk.js","RegionsList.js","Regions.js","index.js"],"names":["Container","props","className","children","SearchForm","onSubmit","getSightings","name","value","selected","type","placeholder","BirdData","birdData","locName","locId","comName","obsDt","ErrorMessage","Home","useState","errorMessage","setErrorMessage","bird","setBird","event","a","preventDefault","location","target","elements","length","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","response","json","data","alert","RecentBirdList","listOfRecentBirds","i","birdList","includes","push","birdDivs","map","Recent","recentBirds","setRecentBirds","onClick","NotableBirdList","listOfNotableBirds","rareBirds","obsReviewed","obsValid","birdsPendingReview","filter","reviewed","birdsVerified","valid","birdsNotValid","birdsPendingDivs","birdsVerifiedDivs","birdsNotValidDivs","Notable","notableBirds","setNotableBirds","setLocation","BaywalkBirdList","Baywalk","baywalkBirds","setBaywalkBirds","RegionsList","regionDivs","regionData","region","code","href","Regions","regions","setRegions","console","log","country","App","to","exact","path","ReactDOM","document","getElementById"],"mappings":"wMAUeA,EARG,SAACC,GACf,OACI,yBAAKC,UAAU,aACTD,EAAME,WCyBLC,EA5BI,SAACH,GAChB,OACE,oCACE,wDACA,0BAAMI,SAAUJ,EAAMK,cACpB,4BAAQC,KAAK,YAEX,4BAAQC,MAAQ,WAAWC,UAAQ,GAAnC,sBACA,4BAAQD,MAAQ,YAAhB,sBACA,4BAAQA,MAAQ,YAAhB,qBACA,4BAAQA,MAAQ,YAAhB,qBACA,4BAAQA,MAAQ,YAAhB,qBACA,4BAAQA,MAAQ,YAAhB,cACA,4BAAQA,MAAQ,YAAhB,mBACA,4BAAQA,MAAQ,YAAhB,qBACA,4BAAQA,MAAQ,YAAhB,gBAEF,4BAAQN,UAAU,iBAAlB,kBAEF,+DACA,0BAAMG,SAAYJ,EAAMK,aAAcJ,UAAY,eAChD,2BAAOK,KAAK,WAAYL,UAAU,aAAaQ,KAAK,OAAOC,YAAY,2BACvE,4BAAQT,UAAU,iBAAlB,oBCtBK,SAASU,EAASX,GAC/B,MAA0CA,EAAMY,SAAjCC,GAAf,EAAQC,MAAR,EAAeD,SAASE,EAAxB,EAAwBA,QAASC,EAAjC,EAAiCA,MAEjC,OACE,yBAAKf,UAAU,aACb,wEACA,uBAAGA,UAAU,eAAec,GAC5B,2BAAIF,GACJ,2BAAIG,ICRV,IAQeC,EARM,WACjB,OACI,yBAAKhB,UAAU,SACX,uBAAGA,UAAU,cAAb,sOCEG,SAASiB,IACtB,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwBF,mBAAS,CAAC,CAACJ,QAAS,GAAIF,QAAQ,GAAIG,MAAM,MAAlE,mBAAOM,EAAP,KAAaC,EAAb,KAF6B,4CAI7B,WAA4BC,GAA5B,uBAAAC,EAAA,yDACED,EAAME,oBACDC,EAAWH,EAAMI,OAAOC,SAASF,SAASpB,OAElCuB,OAAS,GAJxB,wBAKUC,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACrBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAXhB,kBAe2BC,MAAM,qCAAD,OAAsCX,EAAtC,mBAAiEO,GAfjG,cAeUK,EAfV,iBAgBuBA,EAASC,OAhBhC,SAgBUC,EAhBV,QAiBeX,OAAS,GAChBP,EAAQkB,EAAK,IACbpB,GAAgB,KAGhBE,EAAQ,CAACR,QAAS,WAAYF,QAAQ,GAAIG,MAAM,KAChDK,GAAgB,IAvBxB,kDA2BQqB,MAAM,sFA3Bd,gCAgCIrB,GAAgB,GAChBE,EAAQ,CAACR,QAAQ,WAAYF,QAAQ,GAAIG,MAAM,KAjCnD,2DAJ6B,sBAwC7B,OACE,kBAAC,EAAD,KACE,kDACA,kBAAC,EAAD,CAAYX,aA3Ca,8CA4CzB,kBAACM,EAAD,CAAUC,SAAUU,IACnBF,GAAgB,kBAAC,EAAD,OClDR,SAASuB,EAAe3C,GAGrC,IAFA,IAAI4C,EAAoB,GAEfC,EAAI,EAAGA,EAAI7C,EAAM8C,SAAShB,OAAQe,IACpCD,EAAkBG,SAAS/C,EAAM8C,SAASD,GAAG9B,UAChD6B,EAAkBI,KAAKhD,EAAM8C,SAASD,GAAG9B,SAI7C,IAAIkC,EAAWL,EAAkBM,KAAI,SAAA5B,GAAI,OAAI,wBAAIrB,UAAU,YAAYqB,MAIvE,OACE,oCACE,+DACA,4BAAK2B,ICVI,SAASE,IACtB,MAAsChC,mBAAS,CAAC,CAACJ,QAAQ,MAAzD,mBAAOqC,EAAP,KAAoBC,EAApB,KAD+B,4CAE/B,kCAAA5B,EAAA,6DACQM,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACrBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAPd,SASyBC,MAAM,4DAA6DJ,GAT5F,cASQK,EATR,gBAUqBA,EAASC,OAV9B,OAUQC,EAVR,OAWEY,EAAeZ,GAXjB,6CAF+B,sBAgB/B,OACE,kBAAC,EAAD,KACE,kEACA,4BAAQa,QAnBmB,4CAmB3B,gCACA,kBAACX,EAAD,CAAgBG,SAAUM,KC1BjB,SAASG,EAAgBvD,GAItC,IAHA,IAAIwD,EAAqB,GACrBC,EAAY,GAEPZ,EAAI,EAAGA,EAAI7C,EAAM8C,SAAShB,OAAQe,IACpCW,EAAmBT,SAAS/C,EAAM8C,SAASD,GAAG9B,WACjDyC,EAAmBR,KAAKhD,EAAM8C,SAASD,GAAG9B,SAE1C0C,EAAUT,KAAK,CAAC,KAAO,GAAP,OAAUhD,EAAM8C,SAASD,GAAG9B,SAAW,SAAWf,EAAM8C,SAASD,GAAGa,YAAa,MAAQ1D,EAAM8C,SAASD,GAAGc,YAO/H,IAAIC,EAAqBH,EAAUI,QAAO,SAAAvC,GAAI,OAAsB,IAAlBA,EAAKwC,YAEnDC,EAAgBN,EAAUI,QAAO,SAAAvC,GAAI,OAAmB,IAAfA,EAAK0C,SAE9CC,EAAgBR,EAAUI,QAAQ,SAAAvC,GAAI,OAAIA,EAAKwC,WAAaxC,EAAK0C,SAGjEE,EAAmBN,EAAmBV,KAAI,SAAA5B,GAAI,OAAI,wBAAIrB,UAAU,eAAeqB,EAAKhB,KAAlC,0BAElD6D,EAAoBJ,EAAcb,KAAI,SAAA5B,GAAI,OAAI,4BAAKA,EAAKhB,SAExD8D,EAAoBH,EAAcf,KAAI,SAAA5B,GAAI,OAAI,wBAAIrB,UAAU,gBAAgBqB,EAAKhB,KAAnC,yBAElD,OACE,oCACE,+DACA,4BAAK4D,GACL,4BAAKC,GACL,4BAAKC,IC9BI,SAASC,IACpB,MAAwClD,mBAAS,CAAC,CAACJ,QAAQ,GAAI2C,YAAY,MAA3E,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAgCpD,mBAAS,YAAzC,mBAAOQ,EAAP,KAAiB6C,EAAjB,KAF8B,4CAmB9B,kCAAA/C,EAAA,6DACQM,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACvBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAPZ,SAWyBC,MAAM,qCAAD,OAAsCX,EAAtC,uCAAqFO,GAXnH,cAWQK,EAXR,gBAYqBA,EAASC,OAZ9B,OAYQC,EAZR,OAcE8B,EAAgB9B,GAdlB,6CAnB8B,sBAmChC,OACE,kBAAC,EAAD,KACE,wDAA8Bd,GAE9B,4BAAQ1B,UAAU,kBAAkBqD,QAlCtC,WACEkB,EAAY,cAiCZ,8BACA,4BAAQvE,UAAU,kBAAkBqD,QA/BrC,WACCkB,EAAY,cA8BZ,0BACA,oDACA,0BAAMpE,SA7BR,SAAwBoB,GACtBA,EAAME,iBACN8C,EAAYhD,EAAMI,OAAOC,SAASF,SAASpB,SA4BzC,2BAAOD,KAAK,WAAWG,KAAK,OAAOC,YAAY,iCAC/C,mDAEF,4BAAQ4C,QA9CoB,4CA8C5B,8CAED,kBAACC,EAAD,CAAiBT,SAAUwB,KCnDjB,SAASG,EAAgBzE,GAEtC,IAAIiD,EAAWjD,EAAM8C,SAASI,KAAI,SAAA5B,GAAI,OAAI,wBAAIrB,UAAU,YAAYqB,MAEpE,OACE,oCACE,4HACA,2BAAG,wEACH,4BAAK2B,ICLI,SAASyB,IACpB,MAAwCvD,mBAAS,IAAjD,mBAAOwD,EAAP,KAAqBC,EAArB,KACA,EAAgCzD,mBAAS,YAAzC,mBAAOQ,EAAP,KAAiB6C,EAAjB,KAF8B,4CAW9B,kCAAA/C,EAAA,6DACQM,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACvBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAPZ,SAWyBC,MAAM,4CAAD,OAA6CX,GAAYO,GAXvF,cAWQK,EAXR,gBAYqBA,EAASC,OAZ9B,OAYQC,EAZR,OAcEmC,EAAgBnC,GAdlB,6CAX8B,sBA2BhC,OACE,kBAAC,EAAD,KACE,iDAAuBd,GAEvB,0BAAMvB,SA1BR,SAAwBoB,GACtBA,EAAME,iBACN8C,EAAYhD,EAAMI,OAAOC,SAASF,SAASpB,SAyBzC,2BAAOD,KAAK,WAAWG,KAAK,OAAOC,YAAY,4BAC/C,mDAGF,4BAAQ4C,QApCoB,4CAoC5B,sCAED,kBAACmB,EAAD,CAAiB3B,SAAU6B,KCzCjB,SAASE,EAAY7E,GAElC,IAAI8E,EAAa9E,EAAM+E,WAAW7B,KAAI,SAAA8B,GAAM,OAAI,wBAAI/E,UAAU,cAAc+E,EAAO1E,KAAnC,KAA2C0E,EAAOC,SAElG,OACE,oCACE,8CACA,4BAAKH,GACL,uBAAG7E,UAAY,aAAY,uBAAGiF,KAAK,4FAAR,2DCLlB,SAASC,IAEtB,MAAgChE,mBAAS,SAAzC,mBAAOQ,EAAP,KAAiB6C,EAAjB,KACC,EAA6BrD,mBAAS,IAAtC,mBAAMiE,EAAN,KAAeC,EAAf,KAH8B,4CAgB7B,kCAAA5D,EAAA,6DACQM,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACvBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAPZ,SAUyBC,MAAM,yDAAD,OAA0DX,EAA1D,SAA2EO,GAVzG,cAUQK,EAVR,gBAWqBA,EAASC,OAX9B,OAWQC,EAXR,OAaE6C,QAAQC,IAAI9C,GACZ4C,EAAW5C,GAdb,6CAhB6B,kEAiC7B,kCAAAhB,EAAA,6DACQM,EAAY,IAAIC,SACZC,OAAO,kBAAmB,gBAE9BC,EAAiB,CACvBC,OAAQ,MACRC,QAASL,EACTM,SAAU,UAPZ,SAWyBC,MAAM,yDAAD,OAA0DX,EAA1D,SAA2EO,GAXzG,cAWQK,EAXR,gBAYqBA,EAASC,OAZ9B,OAYQC,EAZR,OAcE4C,EAAW5C,GAdb,6CAjC6B,sBAkD/B,OACE,kBAAC,EAAD,KACE,qDAA2Bd,GAE1B,yEACD,0BAAMvB,SA7CR,SAA+BoB,GAC7BA,EAAME,iBACN8C,EAAYhD,EAAMI,OAAOC,SAAS2D,QAAQjF,SA4CxC,2BAAOD,KAAK,UAAUG,KAAK,OAAOC,YAAY,mBAC9C,kDAGF,4BAAQ4C,QA5DmB,4CA4D3B,2CAIA,yHACA,0BAAMlD,SA5DR,SAAwBoB,GACtBA,EAAME,iBACN8C,EAAYhD,EAAMI,OAAOC,SAASF,SAASpB,SA2DzC,2BAAOD,KAAK,WAAWG,KAAK,OAAOC,YAAY,6BAC/C,mDAEI,4BAAQ4C,QArEa,4CAqErB,2CAGN,kBAACuB,EAAD,CAAaE,WAAYK,KClE/B,IAAMK,EAAM,WAEV,OACE,2BACE,2BACE,gBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,gBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,gBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,gBAAC,IAAD,CAAMA,GAAG,YAAT,gBACA,gBAAC,IAAD,CAAMA,GAAG,YAAT,qBAEF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAAI,gBAAC1E,EAAD,OACtB,gBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,WAAU,gBAACzC,EAAD,OAC5B,gBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,YAAW,gBAACvB,EAAD,OAC7B,gBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,YAAW,gBAAClB,EAAD,OAC7B,gBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,YAAW,gBAACT,EAAD,UAMrCU,SACE,gBAAC,IAAD,KACE,gBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a3ca1330.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Container = (props) => {\n    return (\n        <div className=\"container\">\n            { props.children }\n        </div>\n    )\n}\n\nexport default Container","import React from \"react\"\n\nconst SearchForm = (props) => {\n    return (\n      <>\n        <h3>Choose your eBird Region</h3>\n        <form onSubmit={props.getSightings}>  \n          <select name=\"location\">\n          \n            <option value = \"CA-PE-PR\" selected>Prince County, PEI</option>\n            <option value = \"CA-PE-QU\">Queens County, PEI</option>\n            <option value = \"CA-PE-KI\">Kings County, PEI</option>\n            <option value = \"CA-ON-DR\">Durham Region, ON</option>\n            <option value = \"CA-ON-HT\">Halton Region, ON</option>\n            <option value = \"CA-ON-OT\">Ottawa, ON</option>\n            <option value = \"CA-ON-PL\">Peel Region, ON</option>\n            <option value = \"CA-ON-SC\">Simcoe County, ON</option>\n            <option value = \"CA-ON-TO\">Toronto, ON</option>\n          </select>  \n          <button className=\"select-button\">Find my bird!</button>\n        </form>\n        <h3>(or enter your region ID below)</h3>\n        <form onSubmit = {props.getSightings} className = \"search-form\">\n          <input name=\"location\"  className=\"user-input\" type=\"text\" placeholder=\"Location: e.g CA-PE-PR\" /> \n          <button className=\"search-button\">Find my bird!</button>\n        </form>\n      </>\n    )\n}\n\nexport default SearchForm","import React from \"react\"\n\nexport default function BirdData(props) {\n  const { locId, locName, comName, obsDt} = props.birdData\n\n  return (\n    <div className=\"bird-data\">\n      <h3>Bird reported most recently in the area:</h3> \n      <p className=\"bird-result\">{comName}</p>\n      <p>{locName}</p>\n      <p>{obsDt}</p>\n    </div>\n  )\n}","import React from \"react\"\n\nconst ErrorMessage = () => {\n    return (\n        <div className=\"error\">\n            <p className=\"error-text\">Hmmm... there are no results for this location. Either this is not an eBird region ID (eg: CA-PR-PE, US-MD-003, SE-AB) ... or no one has recorded a sighting in the last 30 days. Maybe you could submit an eBird checklist!  ;)</p>\n        </div>\n    )\n}\n\nexport default ErrorMessage","import React from \"react\"\nimport { useState } from \"react\"\nimport Container from \"./Container.js\"\nimport SearchForm from \"./SearchForm.js\"\nimport BirdData from \"./BirdData.js\"\nimport ErrorMessage from \"./ErrorMessage.js\"\n\nexport default function Home() {\n  const [errorMessage, setErrorMessage] = useState(false)\n  const [bird, setBird] = useState([{comName: \"\", locName:\"\", obsDt:\"\"}])\n  \n  async function getSightings(event) {\n    event.preventDefault()\n   const location = event.target.elements.location.value\n    \n    if (location.length > 0)  {\n      const myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n      const requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      \n      try {\n      const response = await fetch(`https://api.ebird.org/v2/data/obs/${location}/recent?back=30`, requestOptions);\n      const data = await response.json();\n        if (data.length > 0) {\n          setBird(data[0])\n          setErrorMessage(false)\n          \n        } else {\n          setBird({comName: \"No bird!\", locName:\"\", obsDt:\"\"})\n          setErrorMessage(true)\n        }\n\n      } catch (error) {\n          alert(\"I don't think that's a valid Location code. Please refresh the page and try again.\")\n          \n      }\n     \n    } else {\n      setErrorMessage(true)\n      setBird({comName:\"No bird!\", locName:\"\", obsDt:\"\"}) \n    }\n  }\n  return (\n    <Container>\n      <h1>Last Bird Sighting</h1>\n      <SearchForm getSightings={getSightings} />\n      <BirdData birdData={bird} />\n      {errorMessage && <ErrorMessage />}\n    </Container>\n  )\n\n}\n\n\n      //       else {\n      //   setBird({comName:\"No bird!\", locName:\"\", obsDt:\"\"}) \n      //   setErrorMessage(true)\n      // }","import React from \"react\"\n\nexport default function RecentBirdList(props){\n  let listOfRecentBirds = []\n\n  for (let i = 0; i < props.birdList.length; i++){\n    if (!listOfRecentBirds.includes(props.birdList[i].comName)){\n      listOfRecentBirds.push(props.birdList[i].comName)\n    }\n  }\n\n  let birdDivs = listOfRecentBirds.map(bird => <li className=\"birdItem\">{bird}</li>)\n\n\n\n  return(\n    <>\n      <h3>Reported in the last 14 days...</h3>\n      <ul>{birdDivs}</ul>\n    </>\n  )\n}","import React from \"react\"\nimport {useState} from \"react\"\n//import getSightings from '../utils/getSightings.js'\nimport itemDetails from './utils/details.js'\nimport LocationInput from \"./LocationInput.js\"\nimport RecentBirdList from \"./RecentBirdList.js\"\nimport Container from \"./Container.js\"\n\nexport default function Recent() {\n  const [recentBirds, setRecentBirds] = useState([{comName:\"\"}])\n  async function getSightings() {\n    const myHeaders = new Headers();\n    myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n    const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n      };\n    const response = await fetch(`https://api.ebird.org/v2/data/obs/CA-PE-PR/recent?back=14`, requestOptions);\n    const data = await response.json();\n    setRecentBirds(data)\n  }\n  \n  return (\n    <Container>\n      <h1>Recent birds in Prince County, PEI</h1>\n      <button onClick={getSightings}>Get the list of recent birds</button>\n      <RecentBirdList birdList={recentBirds} />\n    </Container>\n  )\n}\n\n//export default function Recent(event) {\n  //  const [errorMessage, setErrorMessage] = useState(false)\n  // const [birds, setBirds] = useState([{comName: \"\", locName:\"\", obsDt:\"\"}])\n  \n  // async function getSightings(event) {\n  //  event.preventDefault()\n  //  const location = event.target.elements.location.value\n    \n  //   if (location.length > 0)  {\n  //     const myHeaders = new Headers();\n  //     myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n  //     const requestOptions = {\n  //       method: 'GET',\n  //       headers: myHeaders,\n  //       redirect: 'follow'\n  //     };\n      \n  //     try {\n  //     const response = await fetch(`https://api.ebird.org/v2/data/obs/${location}/recent?back=30`, requestOptions);\n  //     const data = await response.json();\n  //       if (data.length > 0) {\n  //         setBirds(data)\n  //         setErrorMessage(false)\n          \n  //       } else {\n  //         setBirds({comName: \"No bird!\", locName:\"\", obsDt:\"\"})\n  //         setErrorMessage(true)\n  //       }\n\n  //     } catch (error) {\n  //         alert(\"I don't think that's a valid Location code. Please refresh the page and try again.\")\n          \n  //     }\n     \n  //   } else {\n  //     setErrorMessage(true)\n  //     setBirds({comName:\"No bird!\", locName:\"\", obsDt:\"\"}) \n  //   }\n  \n  // }\n\n\n//return (\n  //  <>\n  //     <h1>Recent</h1>\n  //     <LocationInput getSightings = {getSightings}/>\n  //     <RecentBirdList birdData = {birds}/>\n  //     <div id=\"data-container\"></div>\n  //   </>\n//)\n//}\n","import React from \"react\"\n\nexport default function NotableBirdList(props){\n  let listOfNotableBirds = []\n  let rareBirds = []\n\n  for (let i = 0; i < props.birdList.length; i++){\n    if (!listOfNotableBirds.includes(props.birdList[i].comName)){\n      listOfNotableBirds.push(props.birdList[i].comName)\n      \n      rareBirds.push({'name':`${props.birdList[i].comName}`, 'reviewed':props.birdList[i].obsReviewed, 'valid':props.birdList[i].obsValid})\n\n    }\n   \n  }\n\n\n  let birdsPendingReview = rareBirds.filter(bird => bird.reviewed === false)\n\n  let birdsVerified = rareBirds.filter(bird => bird.valid === true)\n\n  let birdsNotValid = rareBirds.filter( bird => bird.reviewed && !bird.valid )\n\n\n  let birdsPendingDivs = birdsPendingReview.map(bird => <li className=\"birdPending\">{bird.name} (Not yet verified)</li>)\n\n  let birdsVerifiedDivs = birdsVerified.map(bird => <li>{bird.name}</li>)\n\n  let birdsNotValidDivs = birdsNotValid.map(bird => <li className=\"birdNotValid\">{bird.name} was misidentified</li>)\n\n  return(\n    <>\n      <h3>Reported in the last 30 days...</h3>\n      <ul>{birdsPendingDivs}</ul>\n      <ul>{birdsVerifiedDivs}</ul>\n      <ul>{birdsNotValidDivs}</ul>      \n    </>\n  )\n}","import React from \"react\"\nimport { useState } from \"react\"\nimport Container from \"./Container.js\"\nimport NotableBirdList from \"./NotableBirdList.js\"\n\nexport default function Notable() {\n    const [notableBirds, setNotableBirds] = useState([{comName:\"\", obsReviewed:\"\"}])\n    const [location, setLocation] = useState(\"CA-PE-PR\")\n\n\n    function changeLocationToToronto(){\n      setLocation(\"CA-ON-TO\")\n    }\n\n     function changeLocationToPEI(){\n      setLocation(\"CA-PE-PR\")\n    }\n\n    function changeLocation(event){\n      event.preventDefault()\n      setLocation(event.target.elements.location.value)\n    }\n    \n    \n    async function getSightings() {\n      const myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n      const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n      };\n\n      \n      const response = await fetch(`https://api.ebird.org/v2/data/obs/${location}/recent/notable?detail=full&back=30`, requestOptions);\n      const data = await response.json();\n      \n      setNotableBirds(data)\n    }\n  return (\n    <Container>\n      <h1>Rare or Unusual birds in {location}</h1>\n\n      <button className=\"location-change\" onClick={changeLocationToToronto}>Change Location to Toronto</button>\n      <button className=\"location-change\" onClick={changeLocationToPEI}>Change Location to PEI</button>\n      <p>... or enter manually</p>\n      <form onSubmit={changeLocation}>\n        <input name=\"location\" type=\"text\" placeholder=\"eBird region ID eg. CA-PE-PR\"/>\n        <button> Set Location </button>\n      </form>\n      <button onClick={getSightings}>... and then get the list of notable birds</button>\n    \n     <NotableBirdList birdList={notableBirds} />\n    </Container>\n  )\n}\n","import React from \"react\"\n\nexport default function BaywalkBirdList(props){\n\n  let birdDivs = props.birdList.map(bird => <li className=\"birdItem\">{bird}</li>)\n\n  return(\n    <>\n      <h3>All species ever recorded (species codes) in a region or at a Personal Checklist location...</h3>\n      <p><em>(To do: convert these to common names?)</em></p>\n      <ul>{birdDivs}</ul>\n    </>\n  )\n}","import React from \"react\"\nimport { useState } from \"react\"\nimport Container from \"./Container.js\"\nimport BaywalkBirdList from \"./BaywalkBirdList.js\"\n\nexport default function Baywalk() {\n    const [baywalkBirds, setBaywalkBirds] = useState([])\n    const [location, setLocation] = useState(\"L7359880\")\n\n\n    function changeLocation(event){\n      event.preventDefault()\n      setLocation(event.target.elements.location.value)\n    }\n    \n    \n    async function getSightings() {\n      const myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n      const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n      };\n\n      \n      const response = await fetch(`https://api.ebird.org/v2/product/spplist/${location}`, requestOptions);\n      const data = await response.json();\n      \n      setBaywalkBirds(data)\n    }\n  return (\n    <Container>\n      <h1>All birds seen at {location}</h1>\n\n      <form onSubmit={changeLocation}>\n        <input name=\"location\" type=\"text\" placeholder=\"eg. CA-PE-PR / L7359880\"/>\n        <button> Set Location </button>\n      </form>\n      \n      <button onClick={getSightings}>... and then get the list of birds</button>\n    \n     <BaywalkBirdList birdList={baywalkBirds} />\n    </Container>\n  )\n}\n","import React from \"react\"\n\nexport default function RegionsList(props){\n\n  let regionDivs = props.regionData.map(region => <li className=\"regionItem\">{region.name}: {region.code}</li>)\n\n  return(\n    <>\n      <h3>All subregions</h3>\n      <ul>{regionDivs}</ul>\n      <p className = \"more-info\"><a href=\"https://ebird.org/canada/region/world/regions?yr=all&m=&hsStats_sortBy=cl&hsStats_o=desc\">You can also explore eBird.org to find your region ID</a></p>\n    </>\n  )\n}","import React from \"react\"\nimport {useState} from \"react\"\nimport Container from \"./Container.js\"\nimport RegionsList from \"./RegionsList.js\"\n\nexport default function Regions(){\n \n  const [location, setLocation] = useState(\"CA-ON\")\n   const[regions, setRegions] = useState([])\n\n    function changeLocation(event){\n      event.preventDefault()\n      setLocation(event.target.elements.location.value)\n    }\n    \n    function changeCountryLocation(event){\n      event.preventDefault()\n      setLocation(event.target.elements.country.value)\n    }\n\n    \n    async function getCountrySightings() {\n      const myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n      const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n      };\n\n      const response = await fetch(`https://api.ebird.org/v2/ref/region/list/subnational1/${location}.json`, requestOptions);\n      const data = await response.json();\n  \n      console.log(data)\n      setRegions(data)\n    }\n\n    async function getSightings() {\n      const myHeaders = new Headers();\n      myHeaders.append(\"X-eBirdApiToken\", \"2ifbkhv7g8ct\");\n\n      const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n      };\n\n      \n      const response = await fetch(`https://api.ebird.org/v2/ref/region/list/subnational2/${location}.json`, requestOptions);\n      const data = await response.json();\n\n      setRegions(data)\n    }\n\n  return (\n    <Container>\n      <h1>List of subregions in {location}</h1>\n\n       <p>For Countries and other \"Top Level\" areas:</p>\n      <form onSubmit={changeCountryLocation}>\n        <input name=\"country\" type=\"text\" placeholder=\"eg. SE, AU, GB\"/>\n        <button> Set Country </button>\n      </form>\n      \n      <button onClick={getCountrySightings}>... and then get the list of subregions</button>\n\n\n      \n      <p>Further explore subregions (eg. Canadian Provinces/US States, Great Britain: England etc.)</p>\n      <form onSubmit={changeLocation}>\n        <input name=\"location\" type=\"text\" placeholder=\"eg. CA-PE, US-MD, GB-ENG\"/>\n        <button> Set Location </button>\n      </form>\n            <button onClick={getSightings}>... and then get the list of subregions</button>\n\n    \n      <RegionsList regionData={regions} />\n    </Container>\n  )\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { Link, Switch, Route } from \"react-router-dom\"\nimport Home from \"./Home.js\"\nimport Recent from \"./Recent.js\"\nimport Notable from \"./Notable.js\"\nimport Baywalk from \"./Baywalk.js\"\nimport Regions from \"./Regions.js\"\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <nav>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/recent\">Recent</Link>\n        <Link to=\"/notable\">Notable</Link>\n        <Link to=\"/baywalk\">Species List</Link>\n        <Link to=\"/regions\">Find a Region ID</Link>\n      </nav>\n      <Switch>\n        <Route exact path=\"/\"><Home /></Route>\n        <Route exact path=\"/recent\"><Recent /></Route>\n        <Route exact path=\"/notable\"><Notable /></Route>\n        <Route exact path=\"/baywalk\"><Baywalk /></Route>\n        <Route exact path=\"/regions\"><Regions /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}